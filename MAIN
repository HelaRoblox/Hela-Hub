local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local parent = gethui()
local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
    if parent:FindFirstChild("Rayfield") then
        parent.Rayfield.Loading.Banner.ImageTransparency = 1
        return
    end
end)

-- easy right :pensive:

local Window = Rayfield:CreateWindow({
   Name = " Noctalis Hub | Main ",
   LoadingTitle = "ðŸ”« Noctalis Hub ðŸ’¥",
   LoadingSubtitle = "by Noctalis",
   Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   ConfigurationSaving = {
      Enabled = true,
      FolderName = NoctalisHub, -- Create a custom folder for your hub/game
      FileName = "Noctalis-Save"
      
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key | Youtube Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "YoutubeHubKey1", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/AtgzSPWK"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Home", 7539983773) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "You executed the script",
   Content = "Hela Hub loaded.",
   Duration = 5,
   Image = 85502241059648,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump Toggle",
   Callback = function()
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	_G.infinJumpStarted = true
	
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Hela Main"; Text="Infinite Jump Activated!"; Duration=5;})

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {1, 1000},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws",
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Input = MainTab:CreateInput({
   Name = "Walkspeed",
   PlaceholderText = "1-1000",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Text)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {1, 1000},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderjp",
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local Input = MainTab:CreateInput({
   Name = "Jump Power",
   PlaceholderText = "1-1000",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Text)
   end,
})

local OtherSection = MainTab:CreateSection("Other")

local Button = MainTab:CreateButton({
   Name = "Kill Player",
   Callback = function()
      game.Players.LocalPlayer.Character.Humanoid.Health = 0
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "God Mode",
   CurrentValue = false,
   Flag = "GodToggle",
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local char = player.Character or player.CharacterAdded:Wait()
       local hum = char:FindFirstChildOfClass("Humanoid")
       
       if hum then
           if Value then
               hum.MaxHealth = 1e+308
               hum.Health = hum.MaxHealth
           else
               hum.MaxHealth = 100
               hum.Health = 100
           end
       end
   end
})

local TPTab = Window:CreateTab("Others", 13451653612) -- Title, Image

TPTab:CreateToggle({
    Name = "X-Ray Vision",
    CurrentValue = false,
    Callback = function(Value)
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and not part.Parent:FindFirstChildOfClass("Humanoid") then
                part.LocalTransparencyModifier = Value and 0.7 or 0
            end
        end
    end
})

TPTab:CreateToggle({
    Name = "ESP (Team Colors)",
    CurrentValue = false,
    Callback = function(Value)
        ESPEnabled = Value
        if Value then
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character then
                    createESP(player)
                end
            end
            Players.PlayerAdded:Connect(function(player)
                createESP(player)
            end)
        else
            for _, highlight in pairs(ESPHighlights) do
                highlight:Destroy()
            end
            ESPHighlights = {}
        end
    end
})

local Input = TPTab:CreateInput({
   Name = "Teleport Input",
   CurrentValue = "",
   PlaceholderText = "Enter Username or Display Name",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
       for _, player in pairs(game.Players:GetPlayers()) do
           if player.Name:sub(1, #Text):lower() == Text:lower() or player.DisplayName:sub(1, #Text):lower() == Text:lower() then
               local targetCharacter = player.Character
               if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                   game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(targetCharacter.HumanoidRootPart.CFrame)
                   break
               end
           end
       end
   end,
})

local Lighting = game:GetService("Lighting")
local originalSettings = {
    Brightness = Lighting.Brightness,
    ClockTime = Lighting.ClockTime,
    FogEnd = Lighting.FogEnd,
    Ambient = Lighting.Ambient
}

local Toggle = TPTab:CreateToggle({
    Name = "FullBright",
    CurrentValue = false,
    Flag = "FullBrightToggle",
    Callback = function(Value)
        if Value then
            Lighting.Brightness = 2
            Lighting.ClockTime = 14
            Lighting.FogEnd = 100000
            Lighting.Ambient = Color3.new(1, 1, 1)
        else
            Lighting.Brightness = originalSettings.Brightness
            Lighting.ClockTime = originalSettings.ClockTime
            Lighting.FogEnd = originalSettings.FogEnd
            Lighting.Ambient = originalSettings.Ambient
        end
    end
})

local ScriptsTab = Window:CreateTab("Scripts", 94638125071676) -- Title, Image
local Section = ScriptsTab:CreateSection("Scripts")

local Button = ScriptsTab:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
   end,
})

local Button = ScriptsTab:CreateButton({
   Name = "Dex Explorer",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
   end,
})

local Button = ScriptsTab:CreateButton({
   Name = "Aimbot GUI",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/HogRider123/Astralis/refs/heads/main/Aim"))()
   end,
})
local FLTab = Window:CreateTab("Fly", 2189714456) -- Title, Image
local Section = FLTab:CreateSection("Flying")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local flying = false
local flySpeed = 5
local flyConnection

FLTab:CreateToggle({
    Name = "Toggle Flight (WASD + Space/Shift)",
    CurrentValue = false,
    Callback = function(Value)
        flyEnabled = Value
        
        if Value then
            bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
            bodyVelocity.Parent = LocalPlayer.Character.HumanoidRootPart
            
            -- Flight controls
            local cam = workspace.CurrentCamera
            RunService.Heartbeat:Connect(function()
                if flyEnabled and bodyVelocity then
                    local moveVec = Vector3.new()
                    
                    if UIS:IsKeyDown(Enum.KeyCode.W) then
                        moveVec = moveVec + cam.CFrame.LookVector
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.S) then
                        moveVec = moveVec - cam.CFrame.LookVector
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.D) then
                        moveVec = moveVec + cam.CFrame.RightVector
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.A) then
                        moveVec = moveVec - cam.CFrame.RightVector
                    end
                    
                    moveVec = moveVec * 50
                    bodyVelocity.Velocity = Vector3.new(moveVec.X, bodyVelocity.Velocity.Y, moveVec.Z)
                    
                    if UIS:IsKeyDown(Enum.KeyCode.Space) then
                        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 50, bodyVelocity.Velocity.Z)
                    elseif UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
                        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, -50, bodyVelocity.Velocity.Z)
                    end
                end
            end)
        elseif bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end
    end
})

local Slider = FLTab:CreateSlider({
   Name = "Fly Speed",
   Range = {0, 1000},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 10,
   Flag = "FlySpeedSlider",
   Callback = function(Value)
       flySpeed = Value
   end,
})



local STTab = Window:CreateTab("Settings", 96957318452720) -- Title, Image

STTab:CreateDropdown({
   Name = "Current Theme",
   Options = {"Default", "AmberGlow", "Amethyst", "Bloom", "DarkBlue", "Green", "Light", "Ocean", "Serenity"},
   CurrentOption = {"Default"},
   MultipleOptions = false,
   Flag = "CurrentTheme",
   Callback = function(Options)
        Window.ModifyTheme(Options[1])
   end,
})

