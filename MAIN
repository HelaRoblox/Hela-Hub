local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local parent = gethui()
local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
    if parent:FindFirstChild("Rayfield") then
        parent.Rayfield.Loading.Banner.ImageTransparency = 1
        return
    end
end)

-- easy right :pensive:

local Window = Rayfield:CreateWindow({
   Name = " Noctalis Hub | Main ",
   LoadingTitle = "ðŸ”« Noctalis Hub ðŸ’¥",
   LoadingSubtitle = "by Noctalis",
   Icon = 71352027460510, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   Theme = "AmberGlow", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   ConfigurationSaving = {
      Enabled = false,
      FolderName = NoctalisHub, -- Create a custom folder for your hub/game
      FileName = "Noctalis-Save"
      
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key | Youtube Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "YoutubeHubKey1", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/AtgzSPWK"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Home", 7539983773) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "You executed the script",
   Content = "Hela Hub loaded.",
   Duration = 5,
   Image = 85502241059648,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump Toggle",
   Callback = function()
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	_G.infinJumpStarted = true
	
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Hela Main"; Text="Infinite Jump Activated!"; Duration=5;})

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {1, 1000},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws",
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Input = MainTab:CreateInput({
   Name = "Walkspeed",
   PlaceholderText = "1-1000",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Text)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {1, 1000},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderjp",
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local Input = MainTab:CreateInput({
   Name = "Jump Power",
   PlaceholderText = "1-1000",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Text)
   end,
})

local OtherSection = MainTab:CreateSection("Other")

local Button = MainTab:CreateButton({
   Name = "Kill Player",
   Callback = function()
      game.Players.LocalPlayer.Character.Humanoid.Health = 0
   end,
})

local Toggle = MainTab:CreateToggle({
   Name = "God Mode",
   CurrentValue = false,
   Flag = "GodToggle",
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local char = player.Character or player.CharacterAdded:Wait()
       local hum = char:FindFirstChildOfClass("Humanoid")
       
       if hum then
           if Value then
               hum.MaxHealth = 1e+308
               hum.Health = hum.MaxHealth
           else
               hum.MaxHealth = 100
               hum.Health = 100
           end
       end
   end
})

local TPTab = Window:CreateTab("Others", 13451653612) -- Title, Image

TPTab:CreateToggle({
    Name = "X-Ray Vision",
    CurrentValue = false,
    Callback = function(Value)
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and not part.Parent:FindFirstChildOfClass("Humanoid") then
                part.LocalTransparencyModifier = Value and 0.7 or 0
            end
        end
    end
})

-- ESP Variables
local ESPEnabled = false
local ESPInstances = {}
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Function to get team color (white if no team)
local function getTeamColor(player)
    if player.Team then
        return player.TeamColor.Color
    end
    return Color3.new(1, 1, 1) -- White if no team
end

-- Function to create ESP for a player
local function createESP(player)
    if player == LocalPlayer then return end -- Don't ESP yourself
    
    local espData = {
        Player = player,
        Highlight = nil,
        Box = nil,
        Connections = {}
    }
    
    local function applyESP(character)
        -- Clean up existing ESP
        if espData.Highlight then
            espData.Highlight:Destroy()
            espData.Highlight = nil
        end
        if espData.Box then
            espData.Box:Destroy()
            espData.Box = nil
        end
        for _, conn in ipairs(espData.Connections) do
            conn:Disconnect()
        end
        espData.Connections = {}
        
        -- Wait for character to fully load
        repeat task.wait() until character:FindFirstChild("Humanoid")
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        -- Try to create limb highlight first
        local highlight = Instance.new("Highlight")
        highlight.Name = player.Name .. "_ESP_Highlight"
        highlight.OutlineTransparency = 0
        highlight.FillTransparency = 0.5
        highlight.OutlineColor = Color3.new(0, 0, 0)
        highlight.FillColor = getTeamColor(player)
        highlight.Adornee = character
        highlight.Parent = character
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        
        -- Check if limbs are visible
        local limbsVisible = false
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency < 1 then
                limbsVisible = true
                break
            end
        end
        
        if limbsVisible then
            -- Use highlight if limbs are visible
            espData.Highlight = highlight
            
            -- Track for new parts being added
            table.insert(espData.Connections, character.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("BasePart") then
                    descendant.LocalTransparencyModifier = 0
                end
            end))
        else
            -- Fall back to box if limbs are invisible
            highlight:Destroy()
            
            local box = Instance.new("BoxHandleAdornment")
            box.Name = player.Name .. "_ESP_Box"
            box.Adornee = humanoidRootPart
            box.AlwaysOnTop = true
            box.ZIndex = 10
            box.Size = Vector3.new(4, 6, 4)
            box.Transparency = 0.5
            box.Color3 = getTeamColor(player)
            box.Parent = character
            
            espData.Box = box
        end
        
        -- Track team changes
        table.insert(espData.Connections, player:GetPropertyChangedSignal("Team"):Connect(function()
            local color = getTeamColor(player)
            if espData.Highlight then
                espData.Highlight.FillColor = color
            end
            if espData.Box then
                espData.Box.Color3 = color
            end
        end))
        
        -- Track character changes
        table.insert(espData.Connections, player.CharacterAdded:Connect(function(newCharacter)
            if ESPEnabled then
                applyESP(newCharacter)
            end
        end))
    end
    
    -- Apply to existing character
    if player.Character then
        applyESP(player.Character)
    else
        table.insert(espData.Connections, player.CharacterAdded:Connect(function(character)
            if ESPEnabled then
                applyESP(character)
            end
        end))
    end
    
    table.insert(ESPInstances, espData)
    return espData
end

-- Function to toggle ESP
local function toggleESP(enable)
    ESPEnabled = enable
    if enable then
        -- Create ESP for existing players
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                createESP(player)
            end
        end
        
        -- Connect to new players
        Players.PlayerAdded:Connect(function(player)
            if ESPEnabled then
                createESP(player)
            end
        end)
    else
        -- Remove all ESP
        for _, espData in pairs(ESPInstances) do
            if espData.Highlight then
                espData.Highlight:Destroy()
            end
            if espData.Box then
                espData.Box:Destroy()
            end
            for _, conn in ipairs(espData.Connections) do
                conn:Disconnect()
            end
        end
        ESPInstances = {}
    end
end

-- Example usage in your Toggle:
TPTab:CreateToggle({
    Name = "Smart ESP (Limbs or Box)",
    CurrentValue = false,
    Callback = function(Value)
        toggleESP(Value)
    end
})
local Input = TPTab:CreateInput({
   Name = "Teleport Input",
   CurrentValue = "",
   PlaceholderText = "Enter Username or Display Name",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
       for _, player in pairs(game.Players:GetPlayers()) do
           if player.Name:sub(1, #Text):lower() == Text:lower() or player.DisplayName:sub(1, #Text):lower() == Text:lower() then
               local targetCharacter = player.Character
               if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                   game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(targetCharacter.HumanoidRootPart.CFrame)
                   break
               end
           end
       end
   end,
})

local Lighting = game:GetService("Lighting")
local originalSettings = {
    Brightness = Lighting.Brightness,
    ClockTime = Lighting.ClockTime,
    FogEnd = Lighting.FogEnd,
    Ambient = Lighting.Ambient
}

local Toggle = TPTab:CreateToggle({
    Name = "FullBright",
    CurrentValue = false,
    Flag = "FullBrightToggle",
    Callback = function(Value)
        if Value then
            Lighting.Brightness = 2
            Lighting.ClockTime = 14
            Lighting.FogEnd = 100000
            Lighting.Ambient = Color3.new(1, 1, 1)
        else
            Lighting.Brightness = originalSettings.Brightness
            Lighting.ClockTime = originalSettings.ClockTime
            Lighting.FogEnd = originalSettings.FogEnd
            Lighting.Ambient = originalSettings.Ambient
        end
    end
})

local ScriptsTab = Window:CreateTab("Scripts", 94638125071676) -- Title, Image
local Section = ScriptsTab:CreateSection("Scripts")

local Button = ScriptsTab:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
   end,
})

local Button = ScriptsTab:CreateButton({
   Name = "Dex Explorer",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
   end,
})

local Button = ScriptsTab:CreateButton({
   Name = "Aimbot GUI",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/HogRider123/Astralis/refs/heads/main/Aim"))()
   end,
})
local FLTab = Window:CreateTab("Fly", 2189714456) -- Title, Image
local Section = FLTab:CreateSection("Flying")

-- TRIPPY FLIGHT SCRIPT
local flyEnabled = false
local flySpeed = 50
local bodyVelocity, flyGyro, flyConnection, tripConnection
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to make player trip/stumble
local function triggerTrip()
    if not flyEnabled or not bodyVelocity or not flyGyro then return end
    
    -- Random tripping effect
    local tripPower = math.random(5, 15)
    local tripDuration = math.random(0.5, 1.5)
    
    -- Apply random force to simulate tripping
    bodyVelocity.Velocity = Vector3.new(
        math.random(-tripPower, tripPower),
        math.random(-5, -2), -- Always makes you dip down
        math.random(-tripPower, tripPower)
    )
    
    -- Temporarily disable gyro for stumbling effect
    flyGyro.MaxTorque = Vector3.new(0, 0, 0)
    task.wait(tripDuration)
    
    -- Restore flight controls
    if flyGyro then
        flyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
    end
end

local function toggleFlight(enable)
    flyEnabled = enable
    
    if enable then
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        -- Clean up previous instances
        if bodyVelocity then bodyVelocity:Destroy() end
        if flyGyro then flyGyro:Destroy() end
        
        -- Create flight controls
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyVelocity.P = 1000
        bodyVelocity.Parent = humanoidRootPart
        
        flyGyro = Instance.new("BodyGyro")
        flyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
        flyGyro.P = 10000
        flyGyro.D = 500
        flyGyro.CFrame = humanoidRootPart.CFrame
        flyGyro.Parent = humanoidRootPart
        
        -- Flight control loop
        flyConnection = RunService.Heartbeat:Connect(function()
            if not flyEnabled or not bodyVelocity or not flyGyro then return end
            
            local cam = workspace.CurrentCamera
            local moveVec = Vector3.new()
            
            -- WASD Movement
            if UIS:IsKeyDown(Enum.KeyCode.W) then
                moveVec += cam.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.S) then
                moveVec -= cam.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.D) then
                moveVec += cam.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.A) then
                moveVec -= cam.CFrame.RightVector
            end
            
            -- Normalize movement
            if moveVec.Magnitude > 0 then
                moveVec = moveVec.Unit * flySpeed
            end
            
            -- Vertical Movement
            local verticalSpeed = 0
            if UIS:IsKeyDown(Enum.KeyCode.Space) then
                verticalSpeed = flySpeed
            elseif UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
                verticalSpeed = -flySpeed
            end
            
            -- Apply movement
            bodyVelocity.Velocity = Vector3.new(moveVec.X, verticalSpeed, moveVec.Z)
            flyGyro.CFrame = cam.CFrame
        end)
        
        -- Random tripping effect
        tripConnection = RunService.Heartbeat:Connect(function()
            if flyEnabled and math.random(1, 500) == 1 then -- ~1/500 chance per frame
                triggerTrip()
            end
        end)
        
        -- Handle character respawns
        LocalPlayer.CharacterAdded:Connect(function(newCharacter)
            if flyEnabled then
                toggleFlight(false)
                task.wait(0.5)
                toggleFlight(true)
            end
        end)
    else
        -- Clean up
        if bodyVelocity then bodyVelocity:Destroy() end
        if flyGyro then flyGyro:Destroy() end
        if flyConnection then flyConnection:Disconnect() end
        if tripConnection then tripConnection:Disconnect() end
    end
end

-- FLIGHT TOGGLE
FLTab:CreateToggle({
    Name = "ðŸŒ€ Trippy Flight (WASD + Space/Shift)",
    CurrentValue = false,
    Callback = function(Value)
        toggleFlight(Value)
    end
})

-- SPEED SLIDER
FLTab:CreateSlider({
    Name = "âš¡ Flight Speed",
    Range = {1, 200},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 50,
    Flag = "FlySpeedSlider",
    Callback = function(Value)
        flySpeed = Value
    end
})



local STTab = Window:CreateTab("Settings", 96957318452720) -- Title, Image

STTab:CreateDropdown({
   Name = "Current Theme",
   Options = {"Default", "AmberGlow", "Amethyst", "Bloom", "DarkBlue", "Green", "Light", "Ocean", "Serenity"},
   CurrentOption = {"AmberGlow"},
   MultipleOptions = false,
   Flag = "CurrentTheme",
   Callback = function(Options)
        Window.ModifyTheme(Options[1])
   end,
})
